<Window x:Class="SchemaEditor.Window1"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:EasyInstall="clr-namespace:EasyInstall;assembly=EasyInstallLib"
    xmlns:my="clr-namespace:Microsoft.Windows.Controls;assembly=WPFToolkit"
    xmlns:ViewModels="clr-namespace:EasyInstall.ViewModels;assembly=EasyInstallViewModels"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:themes="clr-namespace:WPF.Themes;assembly=WPF.Themes"
    themes:ThemeManager.Theme="{Binding ElementName=Themes, Path=SelectedItem}"
    Title="Installer Entity Schema Editor" Height="626" Width="919" Loaded="Window_Loaded">
   <Window.Resources>
      <ViewModels:EntitySchemaCollection x:Key="Schemas"></ViewModels:EntitySchemaCollection>
      <ViewModels:TypeProvider x:Key="Types"/>
      <x:Array Type="sys:String" x:Key="Coll">
         <x:ArrayExtension.Items>
            <sys:String>One</sys:String>
            <sys:String>Two</sys:String>
         </x:ArrayExtension.Items>
      </x:Array>
      <!--<ObjectDataProvider x:Key="SystemTypes" ObjectType="{x:Type ViewModels:TypeProvider}" MethodName="GetBuiltInTypes"/>-->
      <Style x:Key="CellEditStyle" TargetType="{x:Type TextBox}">
         <Setter Property="BorderThickness" Value="0"/>
         <Setter Property="Padding" Value="0"/>
         <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
               <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
         </Style.Triggers>
      </Style>
   </Window.Resources>
   <Grid DataContext="{StaticResource Schemas}">
      <DockPanel Name="HostPanel" LastChildFill="True">
         <ToolBarTray MinHeight="35" DockPanel.Dock="Top" Name="toolBarPanel1">
            <ToolBar Name="toolBar1" >
               <Button x:Name="tbNew" Command="ApplicationCommands.New" Content="New"/>
               <Button x:Name="tbOpen" Command="ApplicationCommands.Open" Content="Open"/>
               <Button x:Name="tbSave" Command="ApplicationCommands.Save" Content="Save"/>
               <Button x:Name="tbSaveAs" Command="ApplicationCommands.SaveAs" Content="Save As"/>
               <Separator></Separator>
               <TextBlock VerticalAlignment="Center"> Current Theme </TextBlock>
               <ComboBox x:Name="Themes" Margin="5,1,1,1" Padding="2" SelectionChanged="Themes_SelectionChanged"></ComboBox>
            </ToolBar>
         </ToolBarTray>
         <DockPanel x:Name="MainGrid" >
            <!--<Grid.ColumnDefinitions>
               <ColumnDefinition Width="Auto" MinWidth="250" />
               <ColumnDefinition Width="Auto" MinWidth="4" />
            </Grid.ColumnDefinitions>-->

            <DockPanel DockPanel.Dock="Left" MinWidth="150" Name="SchemasListPanel" Grid.Column="0">
               <StackPanel DockPanel.Dock="Top">
                  <TextBlock Background="LightYellow">Entity Schemas</TextBlock>
               </StackPanel>
               <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" CornerRadius="5" >
                  <ListBox Margin="2" Name="SchemasList" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                             IsSynchronizedWithCurrentItem="True"
                         ItemsSource="{Binding .}" DisplayMemberPath="Schema.EntityType">
                  </ListBox>
               </Border>
            </DockPanel>
            <!--<GridSplitter BorderThickness="2" Grid.Column="0"></GridSplitter>-->
            <DockPanel DockPanel.Dock="Left" Name="SchemaEditorPanel" Grid.Column="1" LastChildFill="True">
               <my:DataGrid Name="Schema" Margin="10" AutoGenerateColumns="False" IsSynchronizedWithCurrentItem="True"
                             ItemsSource="{Binding /Attributes}" AlternatingRowBackground="Azure" SelectionUnit="Cell"
                             CanUserAddRows="True" CanUserDeleteRows="True" RowEditEnding="Schema_RowEditEnding" CellEditEnding="Schema_CellEditEnding">

                  <my:DataGrid.RowValidationRules>
                     <ViewModels:RowDataInfoValidationRule ValidationStep="UpdatedValue" />
                  </my:DataGrid.RowValidationRules>

                  <my:DataGrid.Columns>
                     <my:DataGridTextColumn x:Name="AttributeNameColumn" Header="Attribute Name" 
                                               Binding="{Binding Key, Mode=Default,ValidatesOnExceptions=True}"
                                               EditingElementStyle="{StaticResource CellEditStyle}"/>
                     <my:DataGridComboBoxColumn x:Name="TypeColumn" Header="Type" MinWidth="150"
                                                   ItemsSource="{Binding Source={StaticResource Types},Path=Types}"
                                                   DisplayMemberPath="TypeName"
                                                   SelectedValuePath="TypeName"
                                                   SelectedValueBinding="{Binding Value.TypeName}">

                     </my:DataGridComboBoxColumn>
                     <my:DataGridCheckBoxColumn x:Name="AllowNullColumn" Header="Allow Null" Binding="{Binding Value.AllowNull, Mode=Default}"/>
                     <my:DataGridCheckBoxColumn x:Name="IsReadonlyColumn" Header="Is Readonly" Binding="{Binding Value.IsReadonly, Mode=Default}"/>
                     <my:DataGridTextColumn x:Name="DefaultValueColumn" Header="DefaultValue"
                                            Binding="{Binding Value.DefaultValue, Mode=Default, ValidatesOnExceptions=True}"/>
                  </my:DataGrid.Columns>
               </my:DataGrid>
            </DockPanel>
         </DockPanel>
      </DockPanel>
   </Grid>
   <Window.CommandBindings>
      <CommandBinding x:Name="NewCommand" Command="ApplicationCommands.New" Executed="NewCommand_Executed"/>
      <CommandBinding x:Name="OpenCommand" Command="ApplicationCommands.Open" Executed="OpenCommand_Executed"/>
      <CommandBinding x:Name="SaveCommand" Command="ApplicationCommands.Save" Executed="SaveCommand_Executed" CanExecute="SaveCommand_CanExecute"/>
      <CommandBinding x:Name="SaveAsCommand" Command="ApplicationCommands.SaveAs" Executed="SaveAsCommand_Executed"/>

   </Window.CommandBindings>
</Window>
